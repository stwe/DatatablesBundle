{##
 # This file is part of the SgDatatablesBundle package.
 #
 # (c) stwe <https://github.com/stwe/DatatablesBundle>
 #
 # For the full copyright and license information, please view the LICENSE
 # file that was distributed with this source code.
 #}

function highlightTable(v) {
    try {
        $(selector).not(".select2-selection__rendered").highlight(v);
        $(".highlight").css({ backgroundColor: "{{ view_features.highlightColor }}" });
    } catch(e) {
        console.log(e.message + ': Make sure that jquery.highlight.js is loaded.');
    }
}

function removeHighlight() {
    $(selector).removeClass("highlight");
}

function storageValue(field, value) {
    localStorage.setItem(field, value);
}

function getStorageValue(field) {
    var myValue = null;
    if (localStorage.getItem(field)) {
        myValue = localStorage.getItem(field);
    }

    return myValue;
}

function getValue(t) {
    return $(t).val();
}

function setupHighlight(fieldId, searchValue, val) {
    if (getStorageValue(fieldId) == null && val == searchValue) {
        removeHighlight();
    }

    if (getStorageValue(fieldId) && val == searchValue) {
        highlightTable(getStorageValue(fieldId));
    }

    storageValue(fieldId, val);
}

{# global search #}
highlightTable(oTable.search());

{# individual filtering #}
{% if view_options.individualFiltering %}

    {# head #}
    {% if 'head' == view_options.individualFilteringPosition %}
        $(selector + "_wrapper").find("tr .individual_filtering").not("input[style='display: none;']").each(function() {
            var searchValue = $(this).data('search-column');
            var fieldId = $(this).data('filter-property-id');

            var val = getValue(this);

            {# multiselect #}
            if (val) {
                if (val.constructor == Array) {
                    for (var index = 0; index < val.length; ++index) {
                        highlightTable(val[index]);
                    }
                }
            }

            {# select2 multiselect #}
            if ($(this).data('select2')) {
                var s2 = $(this).select2('val');
                if (s2) {
                    if (s2.constructor == Array) {
                        for (index = 0; index < s2.length; ++index) {
                            highlightTable(s2[index]);
                        }
                    }
                }
            }

            setupHighlight(fieldId, searchValue, val);
        });
    {% endif %}

    {# foot #}
    {% if 'foot' == view_options.individualFilteringPosition %}
        console.info('foot position: highlight feature not implemented');
    {% endif %}

    {# both #}
    {% if 'both' == view_options.individualFilteringPosition %}
        console.info('both position: highlight feature not implemented');
    {% endif %}

{% endif %}
