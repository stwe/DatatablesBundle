<script type="text/javascript">

    $(document).ready(function () {

        var selector = "#{{ view_table_id }}";

        var defaults = {
            {% include "SgDatatablesBundle:Datatable:language.html.twig" %}
        };

        var features = {
            {% include "SgDatatablesBundle:Datatable:features.html.twig" %}
        };

        var options = {
            {% include "SgDatatablesBundle:Datatable:options.html.twig" %}
        };

        var callbacks = {
            {% include "SgDatatablesBundle:Datatable:callbacks.html.twig" %}
        };

        var ajax = {
            {% include "SgDatatablesBundle:Datatable:ajax.html.twig" %}
        };

        setTimeout(function() {
            var columns = {
                {% include "SgDatatablesBundle:Datatable:columns.html.twig" %}
            };

            $.extend(defaults, features);
            $.extend(defaults, options);
            $.extend(defaults, callbacks);
            $.extend(defaults, ajax);
            $.extend(defaults, columns);

            if ( $.fn.dataTable.isDataTable( selector ) ) {
                {#
                    to check if datatable already exists
                #}
            } else {
                var oTable = $(selector).DataTable(defaults);
            }

            {% if view_options.individualFiltering %}

                var html = '';

                {# "head" and "both" position #}
                {% if "head" == view_options.individualFilteringPosition or "both" == view_options.individualFilteringPosition %}
                    var head = $(selector + "_wrapper").find("div.dataTables_scrollHeadInner table thead");

                    $(head).append('<tr class="individual_filter_row"></tr>');
                    head = $(head).find('tr.individual_filter_row');

                    {% for column in view_columns %}
                        {% if column.searchable %}
                            html =  '<th>';
                            html += '{{ datatable_filter_render(datatable, column, loop.index0)|escape('js') }}';
                            html += '</th>';
                        {% else %}
                            html =  '<th>';
                            html += '<input type="hidden" />';
                            html += '</th>';
                        {% endif %}
                        $(head).append(html);

                        {# init 3rd party libs #}
                        var daterange = $('input[name="daterange"]');
                        try {
                            $(daterange).daterangepicker();
                        } catch (e) {
                            console.log(e.message);
                        }

                    {% endfor %}
                {% endif %}

                {# "foot" position -> datatable_html.html.twig #}

                $(selector + "_wrapper").find("tr input.individual_filtering").on("keyup change", function() {
                    oTable
                        .column( $(this).parent().index()+':visible' )
                        .search( this.value )
                        .draw();
                });

                $("select.individual_filtering").on("keyup change", function(event) {
                    var searchFieldId = $(event.currentTarget).data('filter-property-id');
                    var searchValue = $(this).val();
                    searchValue = searchValue ? searchValue.toString() : '';
                    oTable
                        .column(searchFieldId)
                        .search(searchValue)
                        .draw();
                });

            {% endif %}

            {% if view_multiselect %}
                {% include "SgDatatablesBundle:Datatable:multiselect_actions.html.twig" with {'column': view_multiselect_column} %}
            {% endif %}

        }, features.delay);
    });

</script>

{% block sg_datatable_render_functions %}

    {% include "SgDatatablesBundle:Datatable:render_functions.html.twig" %}

{% endblock %}
